id: c3256ce2-700e-40a8-9a61-4dfa407de078
name: Object Detection (YoloV5)
description: "Object Detection task template is based on YoloV5 model (https://github.com/ultralytics/yolov5).\r\
  \nYoloV5 is a state of the art (SOTA) model for running Object Detection on images.\r\
  \n\r\nInput of the model is an RGB image with pixel values normalized in range (0\
  \ - 1).\r\nTraining (Torch model) input shape is [batchSize, channels, height, width]\
  \ where:\r\n    - batchSize: number of images in a given batch\r\n    - channels:\
  \ number of image channels, and currently it is set to 3 which represents RGB image\r\
  \n    - height: image height\r\n    - width: image width\r\n\r\nExported (Tensorflow\
  \ / JS model) input shape is [batchSize, height, width, channels]\r\n\r\nOutput\
  \ of the model is an array of 4 different values:\r\n    - Index 0: Bounding boxes\r\
  \n    - Index 1: Scores (range: 0 - 1) - how confident model is for the detected\
  \ class\r\n    - Index 2: Class of the detection\r\n    - Index 3: Number of (valid)\
  \ detections after performing NMS (Non-maximum suppression)\r\n\r\nExpected TaskRun\
  \ runtime on CPU is ~36m 17s.\r\n    - CPU: 2.3GHz 8-core 9th-generation Intel Core\
  \ i9\r\n    - RAM: 16 GB 2667 MHz DDR4\r\n\r\nExpected TaskRun runtime on GPU is\
  \ ~7m 49s. System specifications:\r\n    - CPU: AMD Ryzen 7 1800X Eight-Core Processor\r\
  \n    - GPU: Nvidia GeForce GTX 1080 Ti 12 GB VRAM\r\n    - RAM: 32 GB 2666 MHz\
  \ DDR4\r\n\r\nTaskRun parameters:\r\n    - Image count: 91\r\n    - Epochs: 10\r\
  \n    - Batch size: 16\r\n    - Image size: 640x640\r\n    - Environment: Clean\r\
  \n"
is_active: true
project_type: 1
param_groups:
- name: inputs
  params:
  - name: dataset
    description: "A dataset which contains images and annotations which are represented\
      \ by Coretex.ai\r\nimage annotation format."
    value: null
    data_type: dataset
    required: true
  - name: model
    description: Model that will be validated.
    value: null
    data_type: model
    required: false
- name: outputs
  params:
  - name: outputModel
    description: Model trained by this task.
    value: null
    data_type: model
    required: false
- name: parameters
  params:
  - name: epochs
    description: "Number of passes that the model will make through the dataset while\r\
      \ntraining. Higher values increase training time and accuracy, while lower\r\
      \nvalues decrease training time, but they might also decrease accuracy."
    value: 100
    data_type: int
    required: true
  - name: batchSize
    description: "Number of segments into which the dataset is split before the training.\r\
      \nDuring the training a single epoch passes through all of the segments\r\n\
      before moving on to the next epoch. Higher values decrease training time,\r\n\
      but will increase memory consumption, while lower values increase training\r\
      \ntime, but decrease memory consumption."
    value: 16
    data_type: int
    required: true
  - name: imageSize
    description: "Size to which the images from the dataset will be resized to before\
      \ training.\r\nThis affects input and output shapes of the model. Input and\
      \ output image shapes\r\nwill be equal to \"imageSize * imageSize * 3\" where\
      \ imageSize represents both width\r\nand height of the image, while number 3\
      \ (RGB image) represents the number of channels.\r\n\r\nHigher values increase\
      \ training time, but they can increase model accuracy, while lower\r\nvalues\
      \ decrease training time, but they also can decrease model accuracy."
    value: 640
    data_type: int
    required: true
  - name: learningRate
    description: "The learning rate determines the step size at which the model adjusts\
      \ its weights during training.\r\nIt directly impacts how quickly or slowly\
      \ the model converges during training.\r\nA high learning rate can lead to overshooting\
      \ and instability, while a low learning rate may cause slow convergence and\
      \ prolonged training times.\r\n\r\nFinding the right learning rate is crucial\
      \ for optimizing the model's performance."
    value: 0.001
    data_type: float
    required: true
  - name: momentum
    description: "Momentum is a parameter that helps to accelerate gradient descent\
      \ in the relevant direction and dampens oscillations.\r\nIt keeps a moving average\
      \ of gradients and helps the model to avoid getting stuck in local minima.\r\
      \nAppropriate momentum values usually lie between 0.8 to 0.99.\r\n\r\nA momentum\
      \ value too high might cause instability, while a value too low might slow down\
      \ convergence."
    value: 0.9
    data_type: float
    required: true
  - name: weightDecay
    description: "Weight decay, also known as L2 regularization, is a regularization\
      \ technique used to prevent overfitting.\r\nIt adds a penalty term to the loss\
      \ function based on the magnitude of the model's weights.\r\nThis encourages\
      \ the model to have smaller weight values and helps in generalization.\r\n\r\
      \nA too high weight decay might result in underfitting, while a too low value\
      \ might lead to overfitting."
    value: 0.0001
    data_type: float
    required: true
  - name: weightsUrl
    description: "URL of the weights (model checkpoint) which will be used for training.\
      \ This must\r\nbe a URL to a downloadable file supported by YoloV5 model."
    value: '{RESOURCES_SERVER_URL}/experiments/yolov5s6.pt'
    data_type: str
    required: true
  - name: validationSplit
    description: "Percentage of dataset which will be used for validation. Prefered\
      \ value range is\r\n0.1 - 0.9, while the optimal value is 0.2. If values are\
      \ close or equal to 0, or\r\nclose or equal to 1 unexpected errors can appear.\r\
      \n\r\nIf value for \"validationSplit\" is 0.2, then that means that 20% of the\
      \ dataset\r\nwill go for validation, while the rest (80%) will go for training."
    value: 0.2
    data_type: float
    required: true
  - name: excludedClasses
    description: Classes which will be excluded from the dataset when the training
      process starts.
    value: []
    data_type: list[str]
    required: false
  - name: validation
    description: False for training, true for validation mode.
    value: false
    data_type: bool
    required: true
